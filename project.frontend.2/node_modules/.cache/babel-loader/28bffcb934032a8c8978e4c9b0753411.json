{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/deffff/ITQ/project.frontend.2/src/components/Employees.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from 'react-router-dom';\nimport EmployeeForm from \"./EmployeeForm\";\nimport { Table, Button } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Employees() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getEmployees();\n  }, []); //API CALLS\n\n  const getEmployees = async () => {\n    const data = await fetch(process.env.REACT_APP_API_TEAMS + id);\n    const response = await data.json();\n    setItems(response.data);\n  };\n\n  const postEmployee = async employee => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(employee)\n    };\n    const data = await fetch(process.env.REACT_APP_API_POST_EMPLOYEE, requestOptions);\n    const response = await data.json();\n    postEmployeeToTeam(response.data.insertId);\n  };\n\n  const postEmployeeToTeam = async employeeId => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        TeamId: id,\n        EmployeeId: employeeId\n      })\n    };\n    const data = await fetch(process.env.REACT_APP_API_POST_PIVOT, requestOptions);\n    const response = await data.json();\n  }; ///\n\n\n  const openCloseForm = () => {\n    setShowForm(!showForm);\n  };\n\n  const addEmployee = employee => {\n    if (!employee.Name || !employee.Surname || !employee.DNI || !employee.Salary) {\n      return;\n    } //Post to API (above)\n\n\n    postEmployee(employee); //Update front-end with new employee\n\n    const newEmployeesArray = [employee, ...items];\n    setItems(newEmployeesArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      className: \"ui striped table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DNI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Salary (\\u20AC/year)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"center aligned\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Surname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.DNI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Salary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)]\n        }, item.EmployeeId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"ui button\",\n        tabIndex: \"0\",\n        onClick: openCloseForm,\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showForm && /*#__PURE__*/_jsxDEV(EmployeeForm, {\n        onSubmit: addEmployee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Employees, \"QhWE+q0neB/gzWprZsDNP6z1HH0=\", false, function () {\n  return [useParams];\n});\n\n_c = Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["/home/eric/Desktop/deffff/ITQ/project.frontend.2/src/components/Employees.js"],"names":["React","useEffect","useState","useParams","Link","EmployeeForm","Table","Button","Employees","items","setItems","showForm","setShowForm","id","getEmployees","data","fetch","process","env","REACT_APP_API_TEAMS","response","json","postEmployee","employee","requestOptions","method","headers","body","JSON","stringify","REACT_APP_API_POST_EMPLOYEE","postEmployeeToTeam","insertId","employeeId","TeamId","EmployeeId","REACT_APP_API_POST_PIVOT","openCloseForm","addEmployee","Name","Surname","DNI","Salary","newEmployeesArray","map","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from 'react-router-dom';\n\nimport EmployeeForm from \"./EmployeeForm\";\nimport { Table, Button } from 'semantic-ui-react'\n\n\n\nexport default function Employees() {\n\n\n    const [items, setItems] = useState([]);\n    const [showForm, setShowForm] = useState(false);\n\n\n    const { id } = useParams()\n\n    useEffect(() => {\n        getEmployees()\n    }, [])\n\n    //API CALLS\n    const getEmployees = async () => {\n        const data = await fetch(process.env.REACT_APP_API_TEAMS + id)\n        const response = await data.json()\n        setItems(response.data)\n    }\n\n    const postEmployee = async (employee) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(employee)\n        };\n        const data = await fetch(process.env.REACT_APP_API_POST_EMPLOYEE, requestOptions)\n        const response = await data.json()\n\n        postEmployeeToTeam(response.data.insertId)\n    }\n\n    const postEmployeeToTeam = async (employeeId) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ TeamId: id, EmployeeId: employeeId })\n        };\n        const data = await fetch(process.env.REACT_APP_API_POST_PIVOT, requestOptions)\n        const response = await data.json()\n    }\n\n    ///\n\n    const openCloseForm = () => {\n        setShowForm(!showForm)\n    }\n\n    const addEmployee = (employee) => {\n        if (!employee.Name || !employee.Surname || !employee.DNI || !employee.Salary) {\n            return;\n        }\n        //Post to API (above)\n        postEmployee(employee)\n\n        //Update front-end with new employee\n        const newEmployeesArray = [employee, ...items];\n        setItems(newEmployeesArray);\n    };\n\n\n\n    return (\n        <div>\n            <Table className=\"ui striped table\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Last Name</th>\n                        <th>DNI</th>\n                        <th>Salary (€/year)</th>\n                    </tr>\n                </thead>\n                <tbody>{\n                    items.map(item => (\n                        <tr key={item.EmployeeId} className=\"center aligned\">\n                            <td>{item.Name}</td>\n                            <td>{item.Surname}</td>\n                            <td>{item.DNI}</td>\n                            <td>{item.Salary}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n\n            <div >\n                <Button className=\"ui button\" tabIndex=\"0\" onClick={openCloseForm}>\n                    Add Employee\n                </Button>\n            </div>\n\n            <div>\n                { showForm && <EmployeeForm onSubmit={addEmployee} />\n                }\n            </div>\n\n        </div>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}