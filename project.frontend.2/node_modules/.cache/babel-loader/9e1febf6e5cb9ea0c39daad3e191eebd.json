{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/deffff/ITQ/project.frontend.2/src/components/CompaniesList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Table } from 'semantic-ui-react';\nimport Teams from \"./Teams\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CompaniesList() {\n  _s();\n\n  // const [error, setError] = useState(null);\n  // const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [teams, setTeams] = useState([]);\n  const [hideCompanies, setHideCompanies] = useState(true);\n  useEffect(() => {\n    document.body.style.backgroundColor = \"lightblue\";\n    getCompanies();\n  }, []); //API CALLS \n  // Get the companies information \n\n  const getCompanies = async () => {\n    const data = await fetch(process.env.REACT_APP_API_COMPANIES);\n    const response = await data.json();\n    setItems(response.data);\n  };\n\n  const getTeams = async id => {\n    const data = await fetch(process.env.REACT_APP_API_COMPANIES + id);\n    const response = await data.json();\n    setItems(response.data);\n  }; // fetch(process.env.REACT_APP_API_COMPANIES)\n  //   .then(res => res.json())\n  //   .then(\n  //     (result) => {\n  //       setIsLoaded(true);\n  //       setItems(result.data);\n  //     },\n  //     // Nota: es importante manejar errores aquÃ­ y no en \n  //     // un bloque catch() para que no interceptemos errores\n  //     // de errores reales en los componentes.\n  //     (error) => {\n  //       setIsLoaded(true);\n  //       setError(error);\n  //     }\n  //   )\n\n\n  const trigger = id => {\n    setHideCompanies(!hideCompanies);\n    getTeams(id);\n  };\n\n  const fetchTeams = id => {\n    return fetch(process.env.REACT_APP_API_COMPANIES + id).then(res => res.json()).then(result => {\n      setTeams(result.data);\n    }, error => {\n      setError(error);\n    });\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  } // else if (!isLoaded) {\n  //   return <div>Loading...</div>;} \n  else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [hideCompanies && /*#__PURE__*/_jsxDEV(Table, {\n        className: \"ui striped table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sector\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"City \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Teams\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"center aligned\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Sector\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.City\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => trigger(item.CompanyId),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"eye icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)]\n          }, item.CompanyId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Teams, {\n          teams: teams\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(CompaniesList, \"7Zk0bi0ZWSqr1iYArGYpgMJy20M=\");\n\n_c = CompaniesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompaniesList\");","map":{"version":3,"sources":["/home/eric/Desktop/deffff/ITQ/project.frontend.2/src/components/CompaniesList.js"],"names":["React","useEffect","useState","Table","Teams","CompaniesList","items","setItems","teams","setTeams","hideCompanies","setHideCompanies","document","body","style","backgroundColor","getCompanies","data","fetch","process","env","REACT_APP_API_COMPANIES","response","json","getTeams","id","trigger","fetchTeams","then","res","result","error","setError","message","map","item","Name","Sector","City","CompanyId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Table } from 'semantic-ui-react'\nimport Teams from \"./Teams\"\n\n\nexport default function CompaniesList() {\n  \n  // const [error, setError] = useState(null);\n  // const [isLoaded, setIsLoaded] = useState(false);\n\n  const [items, setItems] = useState([]);\n  const [teams, setTeams] = useState([]);\n\n  const [hideCompanies, setHideCompanies] = useState(true);\n\n\n  useEffect(() => {\n    document.body.style.backgroundColor = \"lightblue\"\n    getCompanies()\n  }, [])\n  \n\n  //API CALLS \n  // Get the companies information \n  const getCompanies = async () =>  {\n    const data = await fetch(process.env.REACT_APP_API_COMPANIES)\n    const response = await data.json()\n    setItems(response.data)\n  }\n\n  const getTeams = async (id) =>  {\n    const data = await fetch(process.env.REACT_APP_API_COMPANIES+id)\n    const response = await data.json()\n    setItems(response.data)\n  }\n      \n    // fetch(process.env.REACT_APP_API_COMPANIES)\n    //   .then(res => res.json())\n    //   .then(\n    //     (result) => {\n    //       setIsLoaded(true);\n    //       setItems(result.data);\n    //     },\n    //     // Nota: es importante manejar errores aquÃ­ y no en \n    //     // un bloque catch() para que no interceptemos errores\n    //     // de errores reales en los componentes.\n    //     (error) => {\n    //       setIsLoaded(true);\n    //       setError(error);\n    //     }\n    //   )\n\n  const trigger = (id) => {\n    setHideCompanies(!hideCompanies)\n    getTeams(id)\n  }\n\n  const fetchTeams = (id) => {\n    return fetch(process.env.REACT_APP_API_COMPANIES+id)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setTeams(result.data);\n        },\n        (error) => {\n          setError(error);\n        })\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } \n  // else if (!isLoaded) {\n  //   return <div>Loading...</div>;} \n  else {\n    return (\n\n      <div>\n        {hideCompanies &&\n\n          <Table className=\"ui striped table\">\n            <thead>\n              <tr >\n                <th>Company Name</th>\n                <th>Sector</th>\n                <th>City </th>\n                <th>Teams</th>\n              </tr>\n            </thead>\n            <tbody>{\n              items.map(item => (\n                <tr key={item.CompanyId} className=\"center aligned\">\n                  <td>{item.Name}</td>\n                  <td>{item.Sector}</td>\n                  <td>{item.City}</td>\n                  <td>\n                    <button onClick={() => trigger(item.CompanyId)}>\n                      <i className=\"eye icon\"></i>\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n\n        }\n\n        {<div>\n          {<Teams teams={teams} />}\n        </div>}\n\n      </div>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}