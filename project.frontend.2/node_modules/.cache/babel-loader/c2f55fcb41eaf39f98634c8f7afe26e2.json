{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/ITQ-project/ITQ/project.frontend.2/src/components/Teams.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Table } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Teams(props) {\n  _s();\n\n  console.log(\"dsd teams \", props.teams);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [showTeams, setShowTeams] = useState(false);\n  useEffect(() => {\n    console.log(\"abans de set items\", props.teams);\n    setItems(props.teams);\n\n    if (!props.teams.lenght == 0) {\n      setShowTeams(true);\n    }\n  }); // console.log(\"im receiving the \", companyId)\n  // const fetchTeams = (companyId) => {\n  //     console.log(\"company id \", companyId)\n  //     return fetch(`http://localhost:3000/api/companies/${companyId}`)\n  //             .then(res => res.json())\n  //             .then(\n  //                 (result) => {\n  //                     // setIsLoaded(true);\n  //                     setItems(result.data);\n  //                     // setShowTeams(true)\n  //                 },\n  //                 (error) => {\n  //                     //setIsLoaded(true);\n  //                     setError(error);\n  //                 })\n  // }\n  // useEffect(() => {\n  //     fetch(\"http://localhost:3000/api/companies/\" + companyId)\n  //         .then(res => res.json())\n  //         .then(\n  //             (result) => {\n  //                 setIsLoaded(true);\n  //                 setItems(result.data);\n  //                 // setShowTeams(true)\n  //             },\n  //             // Nota: es importante manejar errores aquí y no en \n  //             // un bloque catch() para que no interceptemos errores\n  //             // de errores reales en los componentes.\n  //             (error) => {\n  //                 //setIsLoaded(true);\n  //                 setError(error);\n  //             }\n  //         )\n  // }, [])\n\n  const pulsar = () => {};\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this);\n  } // else if (!isLoaded) {\n  // return <div>Loading...</div>;}\n  else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", showTeams && /*#__PURE__*/_jsxDEV(Table, {\n        class: \"ui striped table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Employees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [\" \", items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            class: \"center aligned\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => pulsar(),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"eye icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)]\n          }, item.TeamId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Teams, \"Td0mzQXZ/y6kij7TTItZ0deeMGk=\");\n\n_c = Teams;\n\nvar _c;\n\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"sources":["/home/eric/Desktop/ITQ-project/ITQ/project.frontend.2/src/components/Teams.js"],"names":["React","useEffect","useState","Table","Teams","props","console","log","teams","error","setError","isLoaded","setIsLoaded","items","setItems","showTeams","setShowTeams","lenght","pulsar","message","map","item","Name","Type","TeamId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,KAAT,QAAsB,mBAAtB;;AAGA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBF,KAAK,CAACG,KAA/B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCF,KAAK,CAACG,KAAvC;AACAM,IAAAA,QAAQ,CAACT,KAAK,CAACG,KAAP,CAAR;;AACA,QAAG,CAACH,KAAK,CAACG,KAAN,CAAYS,MAAb,IAAuB,CAA1B,EAA4B;AACxBD,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AAEJ,GAPQ,CAAT,CAPiC,CAejC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,QAAME,MAAM,GAAG,MAAM,CACpB,CADD;;AAGA,MAAIT,KAAJ,EAAW;AACP,wBAAO;AAAA,4BAAaA,KAAK,CAACU,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,CAGA;AACA;AAJA,OAKK;AACD,wBACI;AAAA,sBAAQJ,SAAS,iBACb,QAAC,KAAD;AAAO,QAAA,KAAK,EAAC,kBAAb;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAA,0BACIF,KAAK,CAACO,GAAN,CAAUC,IAAI,iBACV;AAAsB,YAAA,KAAK,EAAC,gBAA5B;AAAA,oCACI;AAAA,wBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,qCACI;AAAQ,gBAAA,OAAO,EAAE,MAAML,MAAM,EAA7B;AAAA,uCACI;AAAG,kBAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,aAASG,IAAI,CAACG,MAAd;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA4BH;AACJ;;GA7FuBpB,K;;KAAAA,K","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Table } from 'semantic-ui-react'\n\n\nexport default function Teams(props) {\n    console.log(\"dsd teams \",props.teams)\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n    const [showTeams, setShowTeams] = useState(false);\n\n    useEffect(() => {\n        console.log(\"abans de set items\",props.teams)\n        setItems(props.teams)\n        if(!props.teams.lenght == 0){\n            setShowTeams(true)\n        }\n        \n    })\n    // console.log(\"im receiving the \", companyId)\n\n    // const fetchTeams = (companyId) => {\n    //     console.log(\"company id \", companyId)\n    //     return fetch(`http://localhost:3000/api/companies/${companyId}`)\n    //             .then(res => res.json())\n    //             .then(\n    //                 (result) => {\n    //                     // setIsLoaded(true);\n    //                     setItems(result.data);\n    //                     // setShowTeams(true)\n    //                 },\n    //                 (error) => {\n    //                     //setIsLoaded(true);\n    //                     setError(error);\n    //                 })\n    // }\n\n    // useEffect(() => {\n    //     fetch(\"http://localhost:3000/api/companies/\" + companyId)\n        \n    //         .then(res => res.json())\n    //         .then(\n    //             (result) => {\n    //                 setIsLoaded(true);\n    //                 setItems(result.data);\n    //                 // setShowTeams(true)\n    //             },\n    //             // Nota: es importante manejar errores aquí y no en \n    //             // un bloque catch() para que no interceptemos errores\n    //             // de errores reales en los componentes.\n    //             (error) => {\n    //                 //setIsLoaded(true);\n    //                 setError(error);\n    //             }\n    //         )\n    // }, [])\n\n    \n\n    const pulsar = () => {\n    }\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    }\n    // else if (!isLoaded) {\n    // return <div>Loading...</div>;}\n    else {\n        return (\n            <div> { showTeams &&\n                <Table class=\"ui striped table\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Employees</th>\n                        </tr>\n                    </thead>\n                    <tbody> {\n                        items.map(item => (\n                            <tr key={item.TeamId} class=\"center aligned\">\n                                <td>{item.Name}</td>\n                                <td>{item.Type}</td>\n                                <td >\n                                    <button onClick={() => pulsar()}>\n                                        <i class=\"eye icon\"></i>\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>}\n            </div>\n\n\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}