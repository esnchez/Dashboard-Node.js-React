{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/ITQ-project/ITQ/project.frontend.2/src/components/Employees.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport EmployeeForm from \"./EmployeeForm\";\nimport { Table, Button } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Employees(props) {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [employees, setEmployees] = useState([]);\n  const [items, setItems] = useState([]);\n  const [teamId, setTeamId] = useState(null);\n  const [showEmployees, setShowEmployees] = useState(false);\n  const [showForm, setShowForm] = useState(false); //const teamId = this.props.teamId\n\n  useEffect(() => {\n    setTeamId(props.teamId);\n    setItems(props.employees);\n\n    if (!props.employees.length == 0) {\n      setShowEmployees(true);\n    }\n  });\n\n  const postEmployee = employee => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(employee) // { Name: firstName, Surname: lastName, DNI: dni, Salary: salary}\n\n    };\n    console.log(requestOptions.body);\n    fetch('http://localhost:3000/api/employees/create', requestOptions).then(response => response.json()).then(response => console.log(response));\n  };\n\n  const pulsar = () => {\n    setShowForm(!showForm);\n  };\n\n  const addEmployee = employee => {\n    if (!employee.Name || !employee.Surname || !employee.DNI || !employee.Salary) {\n      return;\n    } //send to insert api\n\n\n    postEmployee(employee);\n    const newEmployeesArray = [employee, ...employees];\n    setEmployees(newEmployeesArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showEmployees && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        class: \"ui striped table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DNI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Salary (\\u20AC/year)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [\" \", items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            class: \"center aligned\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Surname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.DNI\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Salary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this)]\n          }, item.EmployeeId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          class: \"ui button\",\n          tabindex: \"0\",\n          onClick: pulsar,\n          children: \"Add Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: showForm && /*#__PURE__*/_jsxDEV(EmployeeForm, {\n          onSubmit: addEmployee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Employees, \"jUu3wQVTDJ0B32E1ABhuO3o9ytE=\");\n\n_c = Employees;\nexport default Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["/home/eric/Desktop/ITQ-project/ITQ/project.frontend.2/src/components/Employees.js"],"names":["React","useEffect","useState","EmployeeForm","Table","Button","Employees","props","error","setError","employees","setEmployees","items","setItems","teamId","setTeamId","showEmployees","setShowEmployees","showForm","setShowForm","length","postEmployee","employee","requestOptions","method","headers","body","JSON","stringify","console","log","fetch","then","response","json","pulsar","addEmployee","Name","Surname","DNI","Salary","newEmployeesArray","map","item","EmployeeId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport EmployeeForm from \"./EmployeeForm\";\nimport { Table, Button } from 'semantic-ui-react'\n\n\n\nfunction Employees(props) {\n\n    const [error, setError] = useState(null);\n    \n    const [employees, setEmployees] = useState([]);\n    const [items, setItems] = useState([]);\n    const [teamId, setTeamId] = useState(null);\n\n\n    const [showEmployees, setShowEmployees] = useState(false);\n    const [showForm, setShowForm] = useState(false);\n\n\n    //const teamId = this.props.teamId\n\n    useEffect(() => {\n        setTeamId(props.teamId)\n        setItems(props.employees)\n        if (!props.employees.length == 0) {\n            setShowEmployees(true)\n        }\n\n\n    })\n\n    const postEmployee = (employee) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(employee)\n            // { Name: firstName, Surname: lastName, DNI: dni, Salary: salary}\n        };\n        console.log(requestOptions.body)\n        fetch('http://localhost:3000/api/employees/create', requestOptions)\n            .then(response => response.json())\n            .then(response => console.log(response))\n    }\n\n    const pulsar = () => {\n        setShowForm(!showForm)\n    }\n\n    const addEmployee = (employee) => {\n        if (!employee.Name || !employee.Surname || !employee.DNI || !employee.Salary) {\n            return;\n        }\n\n        //send to insert api\n        postEmployee(employee)\n        const newEmployeesArray = [employee, ...employees];\n\n        setEmployees(newEmployeesArray);\n    };\n\n\n\n    return (\n        <div>\n            {\n                showEmployees &&\n\n                <div>\n                    <Table class=\"ui striped table\">\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Last Name</th>\n                                <th>DNI</th>\n                                <th>Salary (€/year)</th>\n                            </tr>\n                        </thead>\n                        <tbody> {\n                            items.map(item => (\n                                <tr key={item.EmployeeId} class=\"center aligned\">\n                                    <td>{item.Name}</td>\n                                    <td>{item.Surname}</td>\n                                    <td>{item.DNI}</td>\n                                    <td>{item.Salary}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n\n                    <div >\n                        <Button class=\"ui button\" tabindex=\"0\" onClick={pulsar}>\n                            Add Employee\n                        </Button>\n                    </div>\n\n                </div>\n            }\n            <p>\n                <div>\n                    {showForm && <EmployeeForm onSubmit={addEmployee} />\n                    }\n                </div>\n            </p>\n\n\n        </div>\n\n\n    )\n}\n\nexport default Employees"]},"metadata":{},"sourceType":"module"}