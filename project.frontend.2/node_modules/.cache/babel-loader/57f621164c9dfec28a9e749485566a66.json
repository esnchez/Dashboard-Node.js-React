{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/ITQ-project/ITQ/project.frontend.2/src/components/Employees.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Table } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Employees(props) {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [employees, setEmployees] = useState([]); //const teamId = this.props.teamId\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/teams/\" + 1).then(res => res.json()).then(result => {\n      //   setIsLoaded(true);\n      setEmployees(result.data);\n    }, // Nota: es importante manejar errores aquí y no en \n    // un bloque catch() para que no interceptemos errores\n    // de errores reales en los componentes.\n    error => {\n      //   setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      class: \"ui striped table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DNI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Salary (\\u20AC/year)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [\" \", employees.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          class: \"center aligned\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Surname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Dni\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Salary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this)]\n        }, item.EmployeeId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Employees, \"eP9lsIRhlgFnOHy0Abkp8kQ/Rmw=\");\n\n_c = Employees;\nexport default Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["/home/eric/Desktop/ITQ-project/ITQ/project.frontend.2/src/components/Employees.js"],"names":["React","useEffect","useState","Table","Employees","props","error","setError","employees","setEmployees","fetch","then","res","json","result","data","map","item","Name","Surname","Dni","Salary","EmployeeId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,KAAT,QAAsB,mBAAtB;;;AAIA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAAA;;AAErB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C,CAHqB,CAKrB;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAAC,qCAAmC,CAApC,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACZ;AACEL,MAAAA,YAAY,CAACK,MAAM,CAACC,IAAR,CAAZ;AACD,KANL,EAOI;AACA;AACA;AACCT,IAAAA,KAAD,IAAW;AACX;AACEC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbL;AAeD,GAhBM,EAgBJ,EAhBI,CAAT;AAoBA,sBACI;AAAA,2BACQ,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC,kBAAb;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA,wBACIE,SAAS,CAACQ,GAAV,CAAcC,IAAI,iBACd;AAA0B,UAAA,KAAK,EAAC,gBAAhC;AAAA,kCACI;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,sBAAKH,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA,WAASJ,IAAI,CAACK,UAAd;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GA3DQlB,S;;KAAAA,S;AA6DT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Table } from 'semantic-ui-react'\n\n\n\nfunction Employees(props){\n\n    const [error, setError] = useState(null);\n    const [employees, setEmployees] = useState([]);\n\n    //const teamId = this.props.teamId\n\n    useEffect(() => {\n        fetch(\"http://localhost:3000/api/teams/\"+1)\n          .then(res => res.json())\n          .then(\n            (result) => {\n            //   setIsLoaded(true);\n              setEmployees(result.data);\n            },\n            // Nota: es importante manejar errores aquí y no en \n            // un bloque catch() para que no interceptemos errores\n            // de errores reales en los componentes.\n            (error) => {\n            //   setIsLoaded(true);\n              setError(error);\n            }\n          )\n      }, [])\n\n    \n\n    return (\n        <div>\n                <Table class=\"ui striped table\">\n                    <thead>\n                        <tr> \n                            <th>Name</th>\n                            <th>Last Name</th>\n                            <th>DNI</th>\n                            <th>Salary (€/year)</th>\n                        </tr>\n                    </thead>\n                    <tbody> {\n                        employees.map(item => (\n                            <tr key={item.EmployeeId} class=\"center aligned\">\n                                <td>{item.Name}</td>\n                                <td>{item.Surname}</td>\n                                <td>{item.Dni}</td>\n                                <td>{item.Salary}</td>\n\n                                {/* <td >\n                                    <button onClick={() => pulsar()}>\n                                        <i class=\"eye icon\"></i>\n                                    </button>\n                                </td> */}\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </div>\n\n\n    )   \n}\n\nexport default Employees"]},"metadata":{},"sourceType":"module"}