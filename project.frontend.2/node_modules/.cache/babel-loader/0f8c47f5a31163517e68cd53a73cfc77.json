{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/deffff/ITQ/project.frontend.2/src/components/Employees.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from 'react-router-dom';\nimport EmployeeForm from \"./EmployeeForm\";\nimport { Table, Button } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Employees() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getEmployees();\n  }, []);\n\n  const getEmployees = async () => {\n    console.log(process.env.REACT_APP_API_TEAMS + id, \"heyyyyyy\");\n    const data = await fetch(process.env.REACT_APP_API_TEAMS + id);\n    const response = await data.json();\n    setItems(response.data);\n  };\n\n  const [showForm, setShowForm] = useState(false); // useEffect(() => {\n  //     setTeamId(props.teamId)\n  //     if (items.length == 0) {\n  //         setItems(props.employees)\n  //     }\n  //     if (!props.employees.length == 0) {\n  //         setShowEmployees(true)\n  //     }\n  // },[])\n  //API Post Calls to DB, tables employees and teams_employees\n  // const postEmployee = (employee) => {\n  //     const requestOptions = {\n  //         method: 'POST',\n  //         headers: { 'Content-Type': 'application/json' },\n  //         body: JSON.stringify(employee)\n  //     };\n  //     fetch(process.env.REACT_APP_API_POST_EMPLOYEE, requestOptions)\n  //         .then(response => response.json())\n  //         .then(response => postEmployeeToTeam(response.data.insertId))\n  // }\n  // const postEmployeeToTeam = (employeeId) => {\n  //     const requestOptions = {\n  //         method: 'POST',\n  //         headers: { 'Content-Type': 'application/json' },\n  //         body: JSON.stringify({ TeamId: teamId, EmployeeId: employeeId })\n  //     };\n  //     fetch(process.env.REACT_APP_API_POST_PIVOT, requestOptions)\n  //         .then(response => response.json())\n  // }\n  ///\n  // const trigger = () => {\n  //     setShowForm(!showForm)\n  // }\n\n  const addEmployee = employee => {\n    if (!employee.Name || !employee.Surname || !employee.DNI || !employee.Salary) {\n      return;\n    } //send to API (above)\n\n\n    postEmployee(employee); //Update front-end with new employee\n\n    const newEmployeesArray = [employee, ...items];\n    setItems(newEmployeesArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      className: \"ui striped table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DNI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Salary (\\u20AC/year)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"center aligned\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Surname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.DNI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Salary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, item.EmployeeId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"ui button\",\n        tabIndex: \"0\",\n        onClick: trigger,\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showForm && /*#__PURE__*/_jsxDEV(EmployeeForm, {\n        onSubmit: addEmployee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Employees, \"fiH1oY8cb1hgSTkRLDomT/t2Ex0=\", false, function () {\n  return [useParams];\n});\n\n_c = Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["/home/eric/Desktop/deffff/ITQ/project.frontend.2/src/components/Employees.js"],"names":["React","useEffect","useState","useParams","Link","EmployeeForm","Table","Button","Employees","items","setItems","id","getEmployees","console","log","process","env","REACT_APP_API_TEAMS","data","fetch","response","json","showForm","setShowForm","addEmployee","employee","Name","Surname","DNI","Salary","postEmployee","newEmployeesArray","map","item","EmployeeId","trigger"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from 'react-router-dom';\n\nimport EmployeeForm from \"./EmployeeForm\";\nimport { Table, Button } from 'semantic-ui-react'\n\n\n\nexport default function Employees() {\n\n\n    const [items, setItems] = useState([]);\n\n    const { id } = useParams()\n\n    useEffect(() => {\n        getEmployees()\n    }, [])\n\n    const getEmployees = async () => {\n        console.log(process.env.REACT_APP_API_TEAMS + id, \"heyyyyyy\")\n        const data = await fetch(process.env.REACT_APP_API_TEAMS + id)\n        const response = await data.json()\n        setItems(response.data)\n    }\n\n\n\n    const [showForm, setShowForm] = useState(false);\n\n\n    // useEffect(() => {\n    //     setTeamId(props.teamId)\n    //     if (items.length == 0) {\n    //         setItems(props.employees)\n    //     }\n    //     if (!props.employees.length == 0) {\n    //         setShowEmployees(true)\n    //     }\n    // },[])\n\n\n    //API Post Calls to DB, tables employees and teams_employees\n\n\n\n\n    // const postEmployee = (employee) => {\n    //     const requestOptions = {\n    //         method: 'POST',\n    //         headers: { 'Content-Type': 'application/json' },\n    //         body: JSON.stringify(employee)\n    //     };\n    //     fetch(process.env.REACT_APP_API_POST_EMPLOYEE, requestOptions)\n    //         .then(response => response.json())\n    //         .then(response => postEmployeeToTeam(response.data.insertId))\n    // }\n\n    // const postEmployeeToTeam = (employeeId) => {\n    //     const requestOptions = {\n    //         method: 'POST',\n    //         headers: { 'Content-Type': 'application/json' },\n    //         body: JSON.stringify({ TeamId: teamId, EmployeeId: employeeId })\n    //     };\n    //     fetch(process.env.REACT_APP_API_POST_PIVOT, requestOptions)\n    //         .then(response => response.json())\n    // }\n\n    ///\n\n    // const trigger = () => {\n    //     setShowForm(!showForm)\n    // }\n\n    const addEmployee = (employee) => {\n        if (!employee.Name || !employee.Surname || !employee.DNI || !employee.Salary) {\n            return;\n        }\n\n        //send to API (above)\n        postEmployee(employee)\n\n        //Update front-end with new employee\n        const newEmployeesArray = [employee, ...items];\n        setItems(newEmployeesArray);\n    };\n\n\n\n    return (\n        <div>\n\n            <Table className=\"ui striped table\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Last Name</th>\n                        <th>DNI</th>\n                        <th>Salary (€/year)</th>\n                    </tr>\n                </thead>\n                <tbody>{\n                    items.map(item => (\n                        <tr key={item.EmployeeId} className=\"center aligned\">\n                            <td>{item.Name}</td>\n                            <td>{item.Surname}</td>\n                            <td>{item.DNI}</td>\n                            <td>{item.Salary}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n\n            <div >\n                <Button className=\"ui button\" tabIndex=\"0\" onClick={trigger}>\n                    Add Employee\n                </Button>\n            </div>\n\n            <div>\n                {showForm && <EmployeeForm onSubmit={addEmployee} />\n                }\n            </div>\n\n        </div>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}