{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/deffff/ITQ/project.frontend.2/src/components/Teams.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { Table } from 'semantic-ui-react';\nimport Employees from \"./Employees\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Teams(props) {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [items, setItems] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [teamId, setTeamId] = useState(null); // const [showTeams, setShowTeams] = useState(false);\n\n  const {\n    companyId\n  } = useParams();\n  useEffect(() => {\n    getTeams(); // setItems(props.teams)\n    // if (!props.teams.length == 0) {\n    //     setShowTeams(true)\n    // }\n    // if (!employees.length == 0){\n    //     setShowTeams(false)\n    // }\n  }, []);\n\n  const getTeams = async () => {\n    const data = await fetch(process.env.REACT_APP_API_COMPANIES + companyId);\n    console.log(\"hello \");\n    const response = await data.json();\n    setItems(response.data);\n  };\n\n  const fetchEmployees = id => {\n    return fetch(process.env.REACT_APP_API_TEAMS + id).then(res => res.json()).then(result => {\n      setEmployees(result.data);\n    }, error => {\n      setError(error);\n    });\n  }; // const trigger = (id) => {\n  //     setShowTeams(!showTeams)\n  //     fetchEmployees(id)\n  //     setTeamId(id)\n  // }\n\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        className: \"ui striped table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Employees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"center aligned\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this)]\n          }, item.TeamId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Employees, {\n          employees: employees,\n          teamId: teamId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Teams, \"NEy3dGKC1ig+OXBwQnl4WlP5Wzo=\", false, function () {\n  return [useParams];\n});\n\n_c = Teams;\n\nvar _c;\n\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"sources":["/home/eric/Desktop/deffff/ITQ/project.frontend.2/src/components/Teams.js"],"names":["React","useEffect","useState","useParams","Table","Employees","Teams","props","error","setError","items","setItems","employees","setEmployees","teamId","setTeamId","companyId","getTeams","data","fetch","process","env","REACT_APP_API_COMPANIES","console","log","response","json","fetchEmployees","id","REACT_APP_API_TEAMS","then","res","result","message","map","item","Name","Type","TeamId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\n\nimport { Table } from 'semantic-ui-react'\nimport Employees from \"./Employees\";\n\n\nexport default function Teams(props) {\n\n    const [error, setError] = useState(null);\n\n    const [items, setItems] = useState([]);\n    const [employees, setEmployees] = useState([]);\n    const [teamId, setTeamId] = useState(null);\n    // const [showTeams, setShowTeams] = useState(false);\n\n\n\n\n    const {companyId} = useParams()\n\n\n\n    useEffect(() => {\n        getTeams()\n        // setItems(props.teams)\n\n        // if (!props.teams.length == 0) {\n        //     setShowTeams(true)\n        // }\n        // if (!employees.length == 0){\n        //     setShowTeams(false)\n        // }\n\n\n    }, [])\n\n    const getTeams = async () => {\n    const data = await fetch(process.env.REACT_APP_API_COMPANIES + companyId)\n    console.log(\"hello \")\n    const response = await data.json()\n    setItems(response.data)\n  }\n\n\n\n    const fetchEmployees = (id) => {\n        return fetch(process.env.REACT_APP_API_TEAMS+id)\n                    .then(res => res.json())\n                    .then(\n                        (result) => {\n                            setEmployees(result.data);\n                        },\n                        (error) => {\n                            setError(error);\n                        })\n      }\n  \n\n\n\n    // const trigger = (id) => {\n    //     setShowTeams(!showTeams)\n    //     fetchEmployees(id)\n    //     setTeamId(id)\n    \n    // }\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    }\n    else {\n        return (\n            <div> \n                <Table className=\"ui striped table\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Employees</th>\n                        </tr>\n                    </thead>\n                    <tbody>{\n                        items.map(item => (\n                            <tr key={item.TeamId} className=\"center aligned\">\n                                <td>{item.Name}</td>\n                                <td>{item.Type}</td>\n                                <td >\n                                    {/* <button onClick={() => trigger(item.TeamId)}>\n                                        <i className=\"eye icon\"></i>\n                                    </button> */}\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n\n                <div>\n                    {<Employees employees={employees} teamId = {teamId}/>}\n                </div>\n\n\n            </div>\n\n\n\n\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}