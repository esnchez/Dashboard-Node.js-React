{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/copy/ITQ/project.frontend.2/src/components/Teams.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Table } from 'semantic-ui-react';\nimport Employees from \"./Employees\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Teams(props) {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [teamId, setTeamId] = useState(null);\n  const [showTeams, setShowTeams] = useState(false);\n  const [showEmployees, setShowEmployees] = useState(false);\n  useEffect(() => {\n    setItems(props.teams);\n\n    if (!props.teams.length == 0) {\n      setShowTeams(true);\n    }\n\n    if (!employees.length == 0) {\n      setShowTeams(false);\n    }\n  });\n\n  const fetchEmployees = id => {\n    return fetch(`http://localhost:3000/api/teams/${id}`).then(res => res.json()).then(result => {\n      // setIsLoaded(true);\n      setEmployees(result.data); // setShowTeams(true)\n    }, error => {\n      //setIsLoaded(true);\n      setError(error);\n    });\n  };\n\n  const pulsar = id => {\n    setShowTeams(!showTeams);\n    fetchEmployees(id);\n    setTeamId(id);\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  } // else if (!isLoaded) {\n  // return <div>Loading...</div>;}\n  else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", showTeams && /*#__PURE__*/_jsxDEV(Table, {\n        className: \"ui striped table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Employees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"center aligned\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => pulsar(item.TeamId),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"eye icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)]\n          }, item.TeamId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Employees, {\n          employees: employees,\n          teamId: teamId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Teams, \"e3nZupjo3wZ0iJ167kipYTqOOJo=\");\n\n_c = Teams;\n\nvar _c;\n\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"sources":["/home/eric/Desktop/copy/ITQ/project.frontend.2/src/components/Teams.js"],"names":["React","useEffect","useState","Table","Employees","Teams","props","error","setError","isLoaded","setIsLoaded","items","setItems","employees","setEmployees","teamId","setTeamId","showTeams","setShowTeams","showEmployees","setShowEmployees","teams","length","fetchEmployees","id","fetch","then","res","json","result","data","pulsar","message","map","item","Name","Type","TeamId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Table } from 'semantic-ui-react'\nimport Employees from \"./Employees\";\n\n\nexport default function Teams(props) {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    const [items, setItems] = useState([]);\n    const [employees, setEmployees] = useState([]);\n    const [teamId, setTeamId] = useState(null);\n\n\n\n    const [showTeams, setShowTeams] = useState(false);\n    const [showEmployees, setShowEmployees] = useState(false);\n\n\n    useEffect(() => {\n        setItems(props.teams)\n\n        if (!props.teams.length == 0) {\n            setShowTeams(true)\n        }\n        if (!employees.length == 0){\n            setShowTeams(false)\n        }\n\n    })\n\n    const fetchEmployees = (id) => {\n        return fetch(`http://localhost:3000/api/teams/${id}`)\n                    .then(res => res.json())\n                    .then(\n                        (result) => {\n                            // setIsLoaded(true);\n                            setEmployees(result.data);\n                            // setShowTeams(true)\n                        },\n                        (error) => {\n                            //setIsLoaded(true);\n                            setError(error);\n                        })\n      }\n  \n\n\n\n    const pulsar = (id) => {\n        setShowTeams(!showTeams)\n        fetchEmployees(id)\n        setTeamId(id)\n    \n    }\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    }\n    // else if (!isLoaded) {\n    // return <div>Loading...</div>;}\n    else {\n        return (\n            <div> {showTeams &&\n                <Table className=\"ui striped table\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Employees</th>\n                        </tr>\n                    </thead>\n                    <tbody>{\n                        items.map(item => (\n                            <tr key={item.TeamId} className=\"center aligned\">\n                                <td>{item.Name}</td>\n                                <td>{item.Type}</td>\n                                <td >\n                                    <button onClick={() => pulsar(item.TeamId)}>\n                                        <i className=\"eye icon\"></i>\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>}\n\n                <div>\n                    {<Employees employees={employees} teamId = {teamId}/>}\n                </div>\n\n\n            </div>\n\n\n\n\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}