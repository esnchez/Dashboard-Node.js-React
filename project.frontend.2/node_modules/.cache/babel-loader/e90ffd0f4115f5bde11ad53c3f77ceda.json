{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/ITQ-project/ITQ/project.frontend.2/src/components/Employees.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Table } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Employees(props) {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [employees, setEmployees] = useState([]); //const teamId = this.props.teamId\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/teams/\" + 1).then(res => res.json()).then(result => {\n      //   setIsLoaded(true);\n      setEmployees(result.data);\n    }, // Nota: es importante manejar errores aquí y no en \n    // un bloque catch() para que no interceptemos errores\n    // de errores reales en los componentes.\n    error => {\n      //   setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  const pulsar = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      class: \"ui striped table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DNI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Salary (\\u20AC/year)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [\" \", employees.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          class: \"center aligned\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Surname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.DNI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Salary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, item.EmployeeId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => pulsar(),\n        children: \" Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Employees, \"eP9lsIRhlgFnOHy0Abkp8kQ/Rmw=\");\n\n_c = Employees;\nexport default Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["/home/eric/Desktop/ITQ-project/ITQ/project.frontend.2/src/components/Employees.js"],"names":["React","useEffect","useState","Table","Employees","props","error","setError","employees","setEmployees","fetch","then","res","json","result","data","pulsar","map","item","Name","Surname","DNI","Salary","EmployeeId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,KAAT,QAAsB,mBAAtB;;;AAIA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAEtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C,CAHsB,CAKtB;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAAC,qCAAqC,CAAtC,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACR;AACAL,MAAAA,YAAY,CAACK,MAAM,CAACC,IAAR,CAAZ;AACH,KANT,EAOQ;AACA;AACA;AACCT,IAAAA,KAAD,IAAW;AACP;AACAC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAbT;AAeH,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,QAAMU,MAAM,GAAG,MAAM,CAEpB,CAFD;;AAMA,sBACI;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC,kBAAb;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA,wBACIR,SAAS,CAACS,GAAV,CAAcC,IAAI,iBACd;AAA0B,UAAA,KAAK,EAAC,gBAAhC;AAAA,kCACI;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,sBAAKH,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA,WAASJ,IAAI,CAACK,UAAd;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eA0BI;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAE,MAAMP,MAAM,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH;;GAlEQZ,S;;KAAAA,S;AAoET,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Table } from 'semantic-ui-react'\n\n\n\nfunction Employees(props) {\n\n    const [error, setError] = useState(null);\n    const [employees, setEmployees] = useState([]);\n\n    //const teamId = this.props.teamId\n\n    useEffect(() => {\n        fetch(\"http://localhost:3000/api/teams/\" + 1)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    //   setIsLoaded(true);\n                    setEmployees(result.data);\n                },\n                // Nota: es importante manejar errores aquí y no en \n                // un bloque catch() para que no interceptemos errores\n                // de errores reales en los componentes.\n                (error) => {\n                    //   setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    }, [])\n\n    const pulsar = () => {\n\n    }\n\n\n\n    return (\n        <div>\n            <Table class=\"ui striped table\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Last Name</th>\n                        <th>DNI</th>\n                        <th>Salary (€/year)</th>\n                    </tr>\n                </thead>\n                <tbody> {\n                    employees.map(item => (\n                        <tr key={item.EmployeeId} class=\"center aligned\">\n                            <td>{item.Name}</td>\n                            <td>{item.Surname}</td>\n                            <td>{item.DNI}</td>\n                            <td>{item.Salary}</td>\n\n                            {/* <td >\n                                    \n                                </td> */}\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n\n            <div>\n                <button onClick={() => pulsar()}> Add Employee\n                </button>\n            </div>\n        </div>\n\n\n    )\n}\n\nexport default Employees"]},"metadata":{},"sourceType":"module"}