{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/ITQ-project/ITQ/project.frontend.2/src/components/Employees.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Employees(props) {\n  _s();\n\n  const [employees, setEmployees] = useState([]); //const teamId = this.props.teamId\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/teams/\" + teamId).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result.data);\n    }, // Nota: es importante manejar errores aquí y no en \n    // un bloque catch() para que no interceptemos errores\n    // de errores reales en los componentes.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is my companies list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Employees;\n\n_s(Employees, \"/A1Ii8+9z2SDNTFDutGp9pjEZTU=\");\n\nexport default Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["/home/eric/Desktop/ITQ-project/ITQ/project.frontend.2/src/components/Employees.js"],"names":["Employees","props","employees","setEmployees","useState","useEffect","fetch","teamId","then","res","json","result","setIsLoaded","setItems","data","error","setError"],"mappings":";;;;;AAAA,SAASA,SAAT,CAAmBC,KAAnB,EAAyB;AAAA;;AAErB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,EAAD,CAA1C,CAFqB,CAIrB;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAAC,qCAAmCC,MAApC,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVC,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAC,MAAAA,QAAQ,CAACF,MAAM,CAACG,IAAR,CAAR;AACD,KANL,EAOI;AACA;AACA;AACCC,IAAAA,KAAD,IAAW;AACTH,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAI,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbL;AAeD,GAhBM,EAgBJ,EAhBI,CAAT;AAoBA,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KAlCQf,S;;GAAAA,S;;AAoCT,eAAeA,SAAf","sourcesContent":["function Employees(props){\n\n    const [employees, setEmployees] = useState([]);\n\n    //const teamId = this.props.teamId\n\n    useEffect(() => {\n        fetch(\"http://localhost:3000/api/teams/\"+teamId)\n          .then(res => res.json())\n          .then(\n            (result) => {\n              setIsLoaded(true);\n              setItems(result.data);\n            },\n            // Nota: es importante manejar errores aquí y no en \n            // un bloque catch() para que no interceptemos errores\n            // de errores reales en los componentes.\n            (error) => {\n              setIsLoaded(true);\n              setError(error);\n            }\n          )\n      }, [])\n\n    \n\n    return (\n        <div> \n            <p>\n                This is my companies list\n            </p>\n        </div>\n\n    )    \n}\n\nexport default Employees"]},"metadata":{},"sourceType":"module"}