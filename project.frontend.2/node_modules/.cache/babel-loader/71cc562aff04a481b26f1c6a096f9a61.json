{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/ITQ-project/ITQ/project.frontend.2/src/components/Employees.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport EmployeeForm from \"./EmployeeForm\";\nimport { Table, Button } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Employees(props) {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [employees, setEmployees] = useState([]);\n  const [items, setItems] = useState([]);\n  const [showForm, setShowForm] = useState(false); //const teamId = this.props.teamId\n\n  useEffect(() => {\n    setItems(props.employees);\n\n    if (!props.employees.length == 0) {\n      setShowEmployees(true);\n    }\n  });\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/teams/\" + 1).then(res => res.json()).then(result => {\n      //   setIsLoaded(true);\n      setEmployees(result.data);\n    }, // Nota: es importante manejar errores aquÃ­ y no en \n    // un bloque catch() para que no interceptemos errores\n    // de errores reales en los componentes.\n    error => {\n      //   setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  const postEmployee = employee => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(employee) // { Name: firstName, Surname: lastName, DNI: dni, Salary: salary}\n\n    };\n    console.log(requestOptions.body);\n    fetch('http://localhost:3000/api/employees/create', requestOptions).then(response => response.json());\n  };\n\n  const pulsar = () => {\n    setShowForm(!showForm);\n  };\n\n  const addEmployee = employee => {\n    if (!employee.Name || !employee.Surname || !employee.DNI || !employee.Salary) {\n      return;\n    } //send to insert api\n\n\n    postEmployee(employee);\n    const newEmployeesArray = [employee, ...employees];\n    setEmployees(newEmployeesArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      class: \"ui striped table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DNI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Salary (\\u20AC/year)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [\" \", items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          class: \"center aligned\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Surname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.DNI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Salary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)]\n        }, item.EmployeeId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        class: \"ui button\",\n        tabindex: \"0\",\n        onClick: pulsar,\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: showForm && /*#__PURE__*/_jsxDEV(EmployeeForm, {\n          onSubmit: addEmployee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Employees, \"0aDYcyB2pe+2glQxzwllBa0EzKk=\");\n\n_c = Employees;\nexport default Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["/home/eric/Desktop/ITQ-project/ITQ/project.frontend.2/src/components/Employees.js"],"names":["React","useEffect","useState","EmployeeForm","Table","Button","Employees","props","error","setError","employees","setEmployees","items","setItems","showForm","setShowForm","length","setShowEmployees","fetch","then","res","json","result","data","postEmployee","employee","requestOptions","method","headers","body","JSON","stringify","console","log","response","pulsar","addEmployee","Name","Surname","DNI","Salary","newEmployeesArray","map","item","EmployeeId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport EmployeeForm from \"./EmployeeForm\";\nimport { Table, Button } from 'semantic-ui-react'\n\n\n\nfunction Employees(props) {\n\n    const [error, setError] = useState(null);\n    const [employees, setEmployees] = useState([]);\n\n    const [items, setItems] = useState([]);\n    const [showForm, setShowForm] = useState(false);\n\n\n    //const teamId = this.props.teamId\n\n    useEffect(() => {\n        setItems(props.employees)\n        if (!props.employees.length == 0) {\n            setShowEmployees(true)\n        }\n\n    })\n\n    useEffect(() => {\n        fetch(\"http://localhost:3000/api/teams/\" + 1)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    //   setIsLoaded(true);\n                    setEmployees(result.data);\n                },\n                // Nota: es importante manejar errores aquÃ­ y no en \n                // un bloque catch() para que no interceptemos errores\n                // de errores reales en los componentes.\n                (error) => {\n                    //   setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    }, [])\n\n    const postEmployee = (employee) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(employee)\n            // { Name: firstName, Surname: lastName, DNI: dni, Salary: salary}\n        };\n        console.log(requestOptions.body)\n        fetch('http://localhost:3000/api/employees/create', requestOptions)\n            .then(response => response.json())\n        \n    }\n\n    const pulsar = () => {\n        setShowForm(!showForm)\n    }\n\n    const addEmployee = (employee) => {\n        if (!employee.Name || !employee.Surname || !employee.DNI || !employee.Salary) {\n          return;\n        }    \n    \n        //send to insert api\n        postEmployee(employee)\n        const newEmployeesArray = [employee, ...employees];\n    \n        setEmployees(newEmployeesArray);\n      };\n\n\n\n    return (\n        <div>\n            <Table class=\"ui striped table\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Last Name</th>\n                        <th>DNI</th>\n                        <th>Salary (â¬/year)</th>\n                    </tr>\n                </thead>\n                <tbody> {\n                    items.map(item => (\n                        <tr key={item.EmployeeId} class=\"center aligned\">\n                            <td>{item.Name}</td>\n                            <td>{item.Surname}</td>\n                            <td>{item.DNI}</td>\n                            <td>{item.Salary}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n\n            <div >\n                <Button class=\"ui button\" tabindex=\"0\" onClick={pulsar}> \n                Add Employee\n                </Button>\n            </div>\n\n\n            <p>\n            <div>\n                {showForm && <EmployeeForm onSubmit={addEmployee} />\n                }\n            </div>\n            </p>            \n            \n        </div>\n\n\n    )\n}\n\nexport default Employees"]},"metadata":{},"sourceType":"module"}