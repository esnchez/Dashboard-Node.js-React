{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/ITQ-project/ITQ/project.frontend.2/src/components/Teams.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Table } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Teams(props) {\n  _s();\n\n  const [error, setError] = useState(null); //const [isLoaded, setIsLoaded] = useState(false);\n\n  const [items, setItems] = useState([]);\n  const TeamId = props;\n  console.log(\"sending \", TeamId);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/companies/\" + 2).then(res => res.json()).then(result => {\n      //setIsLoaded(true);\n      setItems(result.data);\n    }, // Nota: es importante manejar errores aquí y no en \n    // un bloque catch() para que no interceptemos errores\n    // de errores reales en los componentes.\n    error => {\n      //setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  } //else if (!isLoaded) {\n  //return <div>Loading...</div>;}\n  else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        class: \"ui striped table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [\" \", items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => pulsar(),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"eye icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this)]\n          }, item.CompanyId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Teams, \"hBBRZuAHFUOTBmk968Ixsej38rg=\");\n\n_c = Teams;\n\nvar _c;\n\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"sources":["/home/eric/Desktop/ITQ-project/ITQ/project.frontend.2/src/components/Teams.js"],"names":["React","useEffect","useState","Table","Teams","props","error","setError","items","setItems","TeamId","console","log","fetch","then","res","json","result","data","message","map","item","Name","Type","pulsar","CompanyId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,KAAT,QAAsB,mBAAtB;;AAIA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC,CADiC,CAEjC;;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMQ,MAAM,GAAGL,KAAf;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,MAAvB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,KAAK,CAAC,yCAAuC,CAAxC,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV;AACAR,MAAAA,QAAQ,CAACQ,MAAM,CAACC,IAAR,CAAR;AACD,KANL,EAOI;AACA;AACA;AACCZ,IAAAA,KAAD,IAAW;AACT;AACAC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbL;AAeD,GAhBM,EAgBJ,EAhBI,CAAT;;AAkBE,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAA,4BAAaA,KAAK,CAACa,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,CAGA;AACE;AAJF,OAKM;AACJ,wBACI;AAAA,6BACA,QAAC,KAAD;AAAO,QAAA,KAAK,EAAC,kBAAb;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAA,0BACEX,KAAK,CAACY,GAAN,CAAUC,IAAI,iBACZ;AAAA,oCACE;AAAA,wBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,qCACE;AAAQ,gBAAA,OAAO,EAAG,MAAMC,MAAM,EAA9B;AAAA,uCACA;AAAG,kBAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA,aAASH,IAAI,CAACI,SAAd;AAAA;AAAA;AAAA;AAAA,kBADF,CADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAyBD;AACN;;GA1DuBrB,K;;KAAAA,K","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Table } from 'semantic-ui-react'\n\n\n\nexport default function Teams(props) {\n    const [error, setError] = useState(null);\n    //const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n\n    const TeamId = props\n    console.log(\"sending \",TeamId)\n\n    useEffect(() => {\n        fetch(\"http://localhost:3000/api/companies/\"+2)\n          .then(res => res.json())\n          .then(\n            (result) => {\n              //setIsLoaded(true);\n              setItems(result.data);\n            },\n            // Nota: es importante manejar errores aquí y no en \n            // un bloque catch() para que no interceptemos errores\n            // de errores reales en los componentes.\n            (error) => {\n              //setIsLoaded(true);\n              setError(error);\n            }\n          )\n      }, [])\n\n      if (error) {\n        return <div>Error: {error.message}</div>;\n      } \n      //else if (!isLoaded) {\n        //return <div>Loading...</div>;}\n       else {\n        return (\n            <div>\n            <Table class=\"ui striped table\">\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                </tr>\n              </thead>\n              <tbody> {\n                items.map(item => (\n                  <tr key={item.CompanyId}>\n                    <td>{item.Name}</td>\n                    <td>{item.Type}</td>\n                    <td>\n                      <button onClick ={() => pulsar()}>\n                      <i class=\"eye icon\"></i>\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </div>\n        );\n      }\n}"]},"metadata":{},"sourceType":"module"}