{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/ITQ-project/ITQ/project.frontend.2/src/components/Companies2.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Teams from \"./Teams\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Companies2() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [trigger, setTrigger] = useState(false); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/companies\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result.data);\n    }, // Nota: es importante manejar errores aquí y no en \n    // un bloque catch() para que no interceptemos errores\n    // de errores reales en los componentes.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  const pulsar = () => {\n    _s();\n\n    useEffect(() => {\n      console.log(trigger);\n      setTrigger(true);\n      console.log(\"after\", trigger);\n    });\n  };\n\n  _s(pulsar, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => pulsar(),\n          children: item.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), trigger && /*#__PURE__*/_jsxDEV(Teams, {\n          id: item.CompanyId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 27\n        }, this)]\n      }, item.CompanyId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s2(Companies2, \"wDW/Q2d1Rfq3Gzy/ECGtvSKlgHw=\");\n\n_c = Companies2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Companies2\");","map":{"version":3,"sources":["/home/eric/Desktop/ITQ-project/ITQ/project.frontend.2/src/components/Companies2.js"],"names":["React","useEffect","useState","Teams","Companies2","error","setError","isLoaded","setIsLoaded","items","setItems","trigger","setTrigger","fetch","then","res","json","result","data","pulsar","console","log","message","map","item","Name","CompanyId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAGA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC,CALmC,CASnC;AACA;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVT,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACO,MAAM,CAACC,IAAR,CAAR;AACD,KANL,EAOI;AACA;AACA;AACCb,IAAAA,KAAD,IAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbL;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;;AAmBA,QAAMc,MAAM,GAAG,MAAM;AAAA;;AACnBlB,IAAAA,SAAS,CAAC,MAAM;AACdmB,MAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACFC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBV,OAArB;AACC,KAJQ,CAAT;AAKD,GAND;;AA/BmC,KA+B7BQ,MA/B6B;;AAuCnC,MAAId,KAAJ,EAAW;AACT,wBAAO;AAAA,4BAAaA,KAAK,CAACiB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAI,CAACf,QAAL,EAAe;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBACE;AAAA,gBAEIE,KAAK,CAACc,GAAN,CAAUC,IAAI,iBACZ;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,MACfL,MAAM,EADR;AAAA,oBAEGK,IAAI,CAACC;AAFR;AAAA;AAAA;AAAA;AAAA,gBADF,EAMGd,OAAO,iBAAI,QAAC,KAAD;AAAO,UAAA,EAAE,EAAEa,IAAI,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,gBANd;AAAA,SAASF,IAAI,CAACE,SAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;AACF;;IAhEuBtB,U;;KAAAA,U","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Teams from \"./Teams\"\n\n\nexport default function Companies2() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n\n  const [trigger, setTrigger] = useState(false);\n\n\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/companies\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result.data);\n        },\n        // Nota: es importante manejar errores aquí y no en \n        // un bloque catch() para que no interceptemos errores\n        // de errores reales en los componentes.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])\n\n\n  const pulsar = () => {\n    useEffect(() => {\n      console.log(trigger)\n    setTrigger(true)\n    console.log(\"after\", trigger)\n    })\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <ul>\n        {\n          items.map(item => (\n            <li key={item.CompanyId}>\n              <button onClick={() =>\n                pulsar()}>\n                {item.Name}\n              </button>\n\n              {trigger && <Teams id={item.CompanyId}/>}\n\n            </li>\n          ))}\n          \n      </ul>\n\n\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}