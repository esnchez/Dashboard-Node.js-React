{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/ITQ-project/ITQ/project.frontend.2/src/components/Teams.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Teams() {\n  _s();\n\n  const [error, setError] = useState(null); //const [isLoaded, setIsLoaded] = useState(false);\n\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/teams\").then(res => res.json()).then(result => {\n      //setIsLoaded(true);\n      setItems(result.data);\n    }, // Nota: es importante manejar errores aquí y no en \n    // un bloque catch() para que no interceptemos errores\n    // de errores reales en los componentes.\n    error => {\n      //setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  } //else if (!isLoaded) {\n  //return <div>Loading...</div>;}\n  else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.Name\n      }, item.TeamId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this);\n  }\n}\n\n_s(Teams, \"hBBRZuAHFUOTBmk968Ixsej38rg=\");\n\n_c = Teams;\n\nvar _c;\n\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"sources":["/home/eric/Desktop/ITQ-project/ITQ/project.frontend.2/src/components/Teams.js"],"names":["React","useEffect","useState","Teams","error","setError","items","setItems","fetch","then","res","json","result","data","message","map","item","Name","TeamId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAGA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,IAAD,CAAlC,CAD4B,CAE5B;;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV;AACAL,MAAAA,QAAQ,CAACK,MAAM,CAACC,IAAR,CAAR;AACD,KANL,EAOI;AACA;AACA;AACCT,IAAAA,KAAD,IAAW;AACT;AACAC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbL;AAeD,GAhBM,EAgBJ,EAhBI,CAAT;;AAkBE,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAA,4BAAaA,KAAK,CAACU,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,CAGA;AACE;AAJF,OAKM;AACJ,wBACE;AAAA,gBAEER,KAAK,CAACS,GAAN,CAAUC,IAAI,iBACb;AAAA,kBACGA,IAAI,CAACC;AADR,SAASD,IAAI,CAACE,MAAd;AAAA;AAAA;AAAA;AAAA,cADD;AAFF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;AACN;;GAxCuBf,K;;KAAAA,K","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n\nexport default function Teams() {\n    const [error, setError] = useState(null);\n    //const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        fetch(\"http://localhost:3000/api/teams\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              //setIsLoaded(true);\n              setItems(result.data);\n            },\n            // Nota: es importante manejar errores aquí y no en \n            // un bloque catch() para que no interceptemos errores\n            // de errores reales en los componentes.\n            (error) => {\n              //setIsLoaded(true);\n              setError(error);\n            }\n          )\n      }, [])\n\n      if (error) {\n        return <div>Error: {error.message}</div>;\n      } \n      //else if (!isLoaded) {\n        //return <div>Loading...</div>;}\n       else {\n        return (\n          <ul>\n            {\n            items.map(item => (\n             <li key={item.TeamId}>\n               {item.Name} \n              </li> \n           ))  }\n          </ul>\n        );\n      }\n}"]},"metadata":{},"sourceType":"module"}